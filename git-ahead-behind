#!/bin/sh

col_count='[36m'
col_branch='[33m'
col_err='[1;30m'
col_ahead='[32m'
col_behind='[31m'
col_off='[m'

if ! [ -t 1 ]
then
	col_count=
	col_branch=
	col_err=
	col_ahead=
	col_behind=
	col_off=
fi

usage(){
	echo "Usage: $0" >&2
	exit 1
}

if [ $# -ne 0 ]
then usage
fi

revcnt(){
	git rev-list --count "$1"
}

show_ab(){
	rvcnt=`revcnt "${2}..${3}" `
	if [ $rvcnt != 0 ]
	then
		printf '%s %s%s %s%s%s\n' "$1" "$col_count" "$rvcnt" "$col_branch" "$4" "$col_off"
	fi
}

set -e

git branch \
	| sed 's;^\** *;;' \
	| while read local
	do
		local_upstream="$local@{u}"

		if ! remote="$(
			git rev-parse --abbrev-ref --symbolic-full-name "$local_upstream" 2>/dev/null)"
		then
			printf >&2 '%s%s has no upstream%s\n' "$col_err" "$local" "$col_off"
			continue
		fi

		base=`git merge-base "$local" "$remote"`
		show_ab "${col_ahead}ahead$col_off"  "$base" "$local"  "$local $remote"
		show_ab "${col_behind}behind$col_off" "$base" "$remote" "$local $remote"
	done
